// https://www.youtube.com/redirect?event=video_description&redir_token=QUFFLUhqa3dhZ2dueG5BMjdVdzVMTEo2QXZrdDNobGxKQXxBQ3Jtc0ttLW91Q1pFOW5WaGRkQ2lBSXR6Y0V4M2pFazdYQ210eUI5c0ZNVmF3U0ZOUWtUZmRVR3NjdzdYYWdnZnJwcHBUakV1dU5NNVJ6UVo5VDloOW9ZNWQtMzU3NUhIQlFTU1ZYbHBfOXJjTGJ2RUY4ZDlhTQ&q=https%3A%2F%2Fwww.codingninjas.com%2Fcodestudio%2Fproblems%2Fminimum-elements_3843091%3FleftPanelTab%3D0%26utm_source%3Dyoutube%26utm_medium%3Daffiliate%26utm_campaign%3DLovebabbar&v=A3FHNCAkhxE


#include <bits/stdc++.h> 

int solve(vector<int>&num,int x)
{
    if(x==0)
        return 0;
    if(x<0)
        return INT_MAX;
    int mn=INT_MAX;
    for(int i=0;i<num.size();i++){
        int ans=solve(num,x-num[i]);
        if(ans!=INT_MAX){
            mn=min(mn,ans+1);
        }
    }
    return mn;
}

int solve_dp(vector<int>&num,int x, vector<int>&dp)
{
    if(x==0)
        return 0;
    if(x<0)
        return INT_MAX;
    if(dp[x]!=-1)
        return dp[x];
    int mn=INT_MAX;
    for(int i=0;i<num.size();i++){
        int ans=solve_dp(num,x-num[i],dp);
        if(ans!=INT_MAX){
            mn=min(mn,ans+1);
        }
    }
    dp[x]=mn;
    return mn;
}

int solve_tab(vector<int>&num,int x)
{
    vector<int>dp(x+1,INT_MAX);
    dp[0]=0;
    for(int i=1;i<=x;i++){
        for(int j=0;j<num.size();j++){
            if(i-num[j]>=0 && dp[i-num[j]]!=INT_MAX){
                dp[i]=min(dp[i],1+dp[i-num[j]]);
            }
        }
    }
    if(dp[x]==INT_MAX) return -1;
    else return dp[x];
}
int minimumElements(vector<int> &num, int x)
{
    //int n=solve(num, x);
    //if(n==INT_MAX) return -1;
    //else return n;

     //vector<int>dp(x+1,-1);
    // int ans=solve_dp( num, x , dp);
     //if(ans==INT_MAX) return -1;
     //else return ans;

     solve_tab(num, x);
     
}

